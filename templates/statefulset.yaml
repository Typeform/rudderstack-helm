apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rudderstack.fullname" . }}
  labels:
    {{- include "rudderstack.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "rudderstack.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "rudderstack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rudderstack.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ .Files.Get "config.toml" | sha256sum }}

    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ .Release.Name }}-backend-configmap
          name: backend-config-volume
        - configMap:
            defaultMode: 444
            name: {{ .Release.Name }}-statsd-configmap
          name: statsd-config-volume
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - mountPath: /etc/config
            name: backend-config-volume
          ports:
            - name: backend
              containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- if .Values.extraEnvVars }}
              {{- .Values.extraEnvVars | toYaml | nindent 12 }}
            {{- end }}
            - name: DEST_TRANSFORM_URL
              value: "http://{{ .Release.Name }}-transformer:{{ .Values.transformer.service.port}}"
            - name: JOBS_DB_HOST
              value: "{{ .Release.Name }}-postgresql"
            - name: JOBS_DB_USER
              value: "{{ .Values.postgresql.postgresqlUsername }}"
            - name: JOBS_DB_PORT
              value: "{{ .Values.postgresql.service.port }}"
            - name: JOBS_DB_DB_NAME
              value: "{{ .Values.postgresql.postgresqlDatabase }}"
            - name: JOBS_DB_PASSWORD
              value: "{{ .Values.postgresql.postgresqlPassword }}"
            - name: STATSD_SERVER_URL
              value: "localhost:{{ .Values.statsd.service.port }}"
        - name: "statsd"
          image: "{{ .Values.statsd.image.repository }}:{{ .Values.statsd.image.version }}"
          imagePullPolicy: {{ .Values.statsd.image.pullPolicy }}
          command: ["node"]	
          args: ["stats.js", "/etc/statsd/config.js"]	
          volumeMounts:
          - mountPath: /etc/statsd
            name: statsd-config-volume
          ports:
            - name: statsd
              containerPort: {{ .Values.statsd.service.port }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{ include "postgresql.storageClass" . }}
        #TODO: Remove prev line??
